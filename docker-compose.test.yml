services:
  app:
    image: app
    build:
      context: .
    pull_policy: never
    command: npm run start
    container_name: app
    depends_on:
      - db
    env_file: test.env
    environment:
      MONGO_URI: mongodb://root:root@db/jp-test?authSource=admin&tls=false
      ROOT_DIR: /app
    restart: always
    volumes:
      - /app/node_modules
  db:
    attach: false
    build:
      context: ./mongo/
    container_name: db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
    restart: always
    healthcheck:
      test: |
        test $$(mongosh --quiet -u root -p root --eval "try { rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'db' }] }).ok } catch (_) { rs.status().ok }") -eq 1
      interval: 10s
      start_period: 30s
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  mongodb_data:
