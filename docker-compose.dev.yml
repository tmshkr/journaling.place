services:
  app:
    build:
      dockerfile: Dockerfile.dev
    image: app:dev
    command: npm run dev
    container_name: app
    depends_on:
      - jpdb
    env_file: docker.env
    healthcheck:
      test: "curl -f http://app:3000 || exit 1"
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      NEXTAUTH_URL: http://localhost
      MONGO_URI: mongodb://root:root@jpdb/jp-dev?authSource=admin&tls=false
    volumes:
      - /app/node_modules
      - /app/apps/agenda-worker/node_modules
      - /app/apps/trpc-server/node_modules
      - /app/apps/web/node_modules
      - ./:/app
  jpdb:
    attach: false
    build:
      context: ./mongo/
    container_name: jpdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: |
        test $$(mongosh --quiet -u root -p root --eval "try { rs.initiate({ _id: 'rs0', members: [{ _id: 0, host: 'jpdb' }] }).ok } catch (_) { rs.status().ok }") -eq 1
      interval: 10s
      start_period: 30s
  nginx:
    image: nginx:alpine
    container_name: nginx
    depends_on:
      - app
    ports:
      - "443:443"
    volumes:
      - ./cf-cert.pem:/etc/nginx/certs/cf-cert.pem
      - ./cf-key.pem:/etc/nginx/certs/cf-key.pem
      - ./nginx.conf:/etc/nginx/templates/nginx.conf.template

volumes:
  mongodb_data:
