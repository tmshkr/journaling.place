// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
}

model User {
  id            BigInt    @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  salt Bytes?

  journals Journal[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@id([identifier, token])
}

model Prompt {
  id   BigInt @id @default(autoincrement())
  text String @unique

  journals Journal[]
  tags     TagOnPrompt[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model TagOnPrompt {
  promptId BigInt
  tagId    BigInt

  prompt Prompt @relation(fields: [promptId], references: [id])
  tag    Tag    @relation(fields: [tagId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@id([promptId, tagId])
}

model Tag {
  id   BigInt @id @default(autoincrement())
  text String @unique

  TagOnPrompt TagOnPrompt[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Journal {
  id BigInt @id @default(autoincrement())

  authorId BigInt
  promptId BigInt?

  ciphertext Bytes
  iv         Bytes

  author User    @relation(fields: [authorId], references: [id])
  prompt Prompt? @relation(fields: [promptId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([id, authorId])
  @@index(authorId)
  @@index(promptId)
}
