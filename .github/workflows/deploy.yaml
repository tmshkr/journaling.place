name: Blue/Green Deployment
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - staging
env:
  AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ vars.AWS_REGION }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Log in to ECR
        run: aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ vars.DOCKER_REGISTRY }}
      - name: Check if image exists in ECR
        id: check-image-exists
        run: node scripts/check-image-exists.js ${{ github.sha }}
      - name: Build and push
        if: ${{ steps.check-image-exists.outputs.IMAGE_EXISTS == 'false' }}
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            CDN_PREFIX=https://cdn.journaling.place
          tags: ${{ vars.DOCKER_REGISTRY }}/journaling.place:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      target_env: ${{ steps.deploy.outputs }}
    steps:
      - uses: actions/checkout@v4
      - name: Generate deployment package
        run: |
          echo ${{ github.ref_name }} > ENVIRONMENT
          echo ${{ github.sha }} > SHA
          zip -r bundle.zip . -x '*.git*'
      - name: Deploy
        uses: tmshkr/blue-green-beanstalk@v2.1
        id: deploy
        with:
          app_name: "journaling.place"
          blue_env: ${{ vars.BLUE_ENV }}
          green_env: ${{ vars.GREEN_ENV }}
          option_settings: option-settings.json
          platform_branch_name: "Docker running on 64bit Amazon Linux 2023"
          production_cname: ${{ vars.PRODUCTION_CNAME }}
          promote: ${{ github.ref_name == 'main' }}
          source_bundle: bundle.zip
          staging_cname: ${{ vars.STAGING_CNAME }}
          version_description: ${{ github.event.head_commit.message }}
          version_label: ${{ github.ref_name }}-${{ github.sha }}
      - name: Update DNS
        if: ${{ github.ref_name == 'main' }}
        run: |
          curl -X POST https://${{ secrets.DNS_USERNAME }}:${{ secrets.DNS_PASSWORD }}@domains.google.com/nic/update?hostname=journaling.place&myip=${{ steps.deploy.outputs.target_env_endpoint_url }}
      - name: Tag image
        run: ./scripts/tag-image.sh ${{ github.sha }} ${{ github.ref_name }}

  test:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
      - name: Install e2e deps
        run: npm install --workspace=e2e && npm run install:playwright --workspace=e2e
      - name: Get env vars
        run: |
          echo ${{ github.ref_name }} > ENVIRONMENT
          echo ${{ github.sha }} > SHA
          ./.platform/hooks/prebuild/get-env-vars.sh
      - name: Wait for server
        run: ./scripts/wait-for-server.sh ${{ needs.deploy.outputs.target_env.target_env_cname }} ${{ github.ref_name }}-${{ github.sha }}
      - name: Run e2e tests
        run: npm run test --workspace=e2e
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: packages/e2e/playwright-report/
          retention-days: 30
