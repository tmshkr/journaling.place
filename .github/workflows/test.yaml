name: Run Tests
on:
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      EMAIL_FROM: ${{ vars.EMAIL_FROM }}
      EMAIL_SERVER: ${{ secrets.EMAIL_SERVER }}
      NEXTAUTH_URL: http://localhost
      NEXT_PUBLIC_VERSION: test-${{ github.sha }}
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      MONGO_URI: mongodb://root:root@localhost:27018/jp-test?authSource=admin&tls=false&directConnection=true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: actions/setup-node@v3
        with:
          cache: "npm"
          node-version: 21
      - name: Setup Action Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-cache
          path: |
            /home/runner/.cache/ms-playwright/
      - name: Setup ngrok-ssh
        uses: tmshkr/ngrok-ssh@v1
        with:
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
          NGROK_CONFIG_FILE: "ngrok.yml"
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: Build
        uses: docker/build-push-action@v5
        with:
          load: true
          push: false
          tags: app:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Generate .env
        run: printenv >> .env
      - name: Start docker compose
        run: docker compose -f docker-compose.test.yml up -d
      - name: Install e2e deps
        run: npm run install:ci --workspace=e2e
      - name: Run e2e tests
        run: npm run test --workspace=e2e
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: packages/e2e/playwright-report/
          retention-days: 30
      - name: Stop docker compose
        if: always()
        run: docker compose -f docker-compose.test.yml down
